#!/usr/bin/env python
#
# nusoft
#
# Converts commands in actions.
#
# Author P G Jones - 2014-08-02 <p.g.jones@qmul.ac.uk> : New file.
####################################################################################################
import os
import logging
import nusoft.nusoft
import argparse
import datetime
now = datetime.datetime.now()

log_file_name = "nusoft" +  now.strftime('%Y-%m-%d-%H:%M') + ".log"
if os.path.exists(log_file_name):
    os.remove(log_file_name)
logging.basicConfig(filename=log_file_name, level=logging.DEBUG)

nu = nusoft.nusoft.Nusoft(os.getcwd())
parser = argparse.ArgumentParser(prog='nusoft', description='Package manager for particle physics')
parser.add_argument("command", help="Command for nusoft; [install, install-dependencies, update, remove, query] + package"
                    " name; [list, search];", nargs="*")
parser.add_argument('--version', action='version', version='0.1')

parser.add_argument('--dry', action='store_true', help='Do a dry run')
args = parser.parse_args()

if len(args.command) == 0:
    parser.print_help()
elif args.command[0] == "install":
    nu.install(args.command[1])
elif args.command[0] == "update":
    nu.update(args.command[1])
elif args.command[0] == "remove":
    nu.remove(args.command[1])
elif args.command[0] == "list":
    nu.list()
elif args.command[0] == "search":
    nu.search(args.command[1])
elif args.command[0] == "query":
    nu.query(args.command[1])
